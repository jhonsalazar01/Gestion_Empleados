<div class="d-flex justify-content-between flex-wrap flex-md nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
  <h1 class="h2">Editar: <%= customer.firstName %> <%= customer.lastName %></h1>
  <div class="btn-toolbar mb-2 mb-md 0"></div>
</div>

<div class="col py-3">
  <div class="row">
    <div class="col">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/">Empleados</a></li>
          <li class="breadcrumb-item active"><%= customer.firstName %> <%= customer.lastName %></li>
        </ol>
      </nav>
    </div>
    <div class="col text-end fw-lighter">
      <b>Última Actualización: <%= new Date(customer.updatedAt).toUTCString() %></b>
    </div>
  </div>
</div>

<form action="/edit/<%= customer._id %>?_method=PUT" method="POST" id="editForm">

  <!-- Campo Nombre -->
  <div class="row form-group mb-4">
    <div class="col">
      <label for="firstName">Nombre</label>
      <input type="text" class="form-control" id="firstName" name="firstName" value="<%= customer.firstName %>" placeholder="First Name" required>
      <div class="error-message" id="errorFirstName"></div>
    </div>
  </div>

  <!-- Campo Apellido -->
  <div class="row form-group mb-4">
    <div class="col">
      <label for="lastName">Apellido</label>
      <input type="text" class="form-control" id="lastName" name="lastName" value="<%= customer.lastName %>" placeholder="Last Name" required>
      <div class="error-message" id="errorLastName"></div>
    </div>
  </div>

  <!-- Campo Salario -->
  <div class="row form-group mb-4">
    <div class="col">
      <label for="tel">Salario</label>
      <input type="text" class="form-control" id="tel" name="tel" value="<%= customer.tel %>" placeholder="Salary" required>
      <div class="error-message" id="errorSalary"></div>
    </div>
  </div>

  <!-- Campo Correo Electrónico -->
  <div class="row form-group mb-4">
    <div class="col">
      <label for="email">Correo Electrónico</label>
      <input type="text" class="form-control" id="email" name="email" value="<%= customer.email %>" placeholder="Email" required>
      <div class="error-message" id="errorEmail"></div>
    </div>
  </div>

  <div class="form-group mb-4">
    <label for="details">Detalles del empleado</label>
    <textarea class="form-control" name="details" id="details" cols="30" rows="12" placeholder="Customer Details"><%= customer.details %></textarea>
  </div>

  <div class="form-group mb-4">
    <button type="submit" class="btn btn-primary" id="submitButton" disabled>Actualizar Empleado</button>
  </div>

</form>

<script>
  // Valores originales para detectar cambios
  const originalData = {
    firstName: "<%= customer.firstName %>",
    lastName: "<%= customer.lastName %>",
    salary: "<%= customer.tel %>",
    email: "<%= customer.email %>"
  };

  // Validaciones de campos
  function validateFirstName() {
    const firstName = document.getElementById('firstName').value;
    const nameRegex = /^[a-zA-ZÁÉÍÓÚáéíóúñÑ ]{4,}$/;
    document.getElementById('errorFirstName').innerText = !nameRegex.test(firstName)
      ? 'El nombre debe tener al menos 4 caracteres (letras y espacios permitidos).' : '';
    checkFormValidity();
  }

  function validateLastName() {
    const lastName = document.getElementById('lastName').value;
    const nameRegex = /^[a-zA-ZÁÉÍÓÚáéíóúñÑ ]{4,}$/;
    document.getElementById('errorLastName').innerText = !nameRegex.test(lastName)
      ? 'El apellido debe tener al menos 4 caracteres (letras y espacios permitidos).' : '';
    checkFormValidity();
  }

  function validateSalary() {
    const salary = document.getElementById('tel').value;
    const salaryRegex = /^\d{1,7}$/;
    document.getElementById('errorSalary').innerText = (salary && !salaryRegex.test(salary))
      ? 'El salario no debe tener más de 7 dígitos.' : '';
    checkFormValidity();
  }

  function validateEmail() {
    const email = document.getElementById('email').value;
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    document.getElementById('errorEmail').innerText = (email && !emailRegex.test(email))
      ? 'Correo Electrónico no válido.' : '';
    checkFormValidity();
  }

  function checkFormValidity() {
    const errors = [
      document.getElementById('errorFirstName').innerText,
      document.getElementById('errorLastName').innerText,
      document.getElementById('errorSalary').innerText,
      document.getElementById('errorEmail').innerText
    ];
    document.getElementById('submitButton').disabled = !errors.every(error => error === '');
  }

  // Eventos en tiempo real
  document.getElementById('firstName').addEventListener('input', validateFirstName);
  document.getElementById('lastName').addEventListener('input', validateLastName);
  document.getElementById('tel').addEventListener('input', validateSalary);
  document.getElementById('email').addEventListener('input', validateEmail);

  // Evento submit para registrar cambios
  document.getElementById('editForm').addEventListener('submit', async function (e) {
    const currentData = {
      firstName: document.getElementById('firstName').value,
      lastName: document.getElementById('lastName').value,
      salary: document.getElementById('tel').value,
      email: document.getElementById('email').value
    };

    const cambios = {};

    for (const campo in originalData) {
      if (originalData[campo] !== currentData[campo]) {
        cambios[campo] = {
          antes: originalData[campo],
          despues: currentData[campo]
        };
      }
    }

    if (Object.keys(cambios).length > 0) {
      try {
        await fetch('https://logs-d4hu.onrender.com/logs', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            correo: 'attimeforlunch@gmail.com',
            accion: 'Editar Empleado del restaurante',
            fecha: new Date().toISOString(),
            datos: cambios
          })
        });
      } catch (error) {
        console.error('Error al registrar el log:', error);
      }
    }
  });
</script>

<style>
  .error-message {
    color: red;
    font-size: 0.9em;
  }
</style>
